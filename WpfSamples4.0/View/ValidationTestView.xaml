<Window x:Class="WpfSamples40.View.ValidationTestView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:converters="clr-namespace:WpfSamples40.WpfInfrastructure.Converters"
        xmlns:validationRules="clr-namespace:WpfSamples40.WpfInfrastructure.ValidationRules"
        xmlns:classes="clr-namespace:WpfSamples40.WpfInfrastructure.Classes"
        xmlns:viewModel="clr-namespace:WpfSamples40.ViewModel"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModel:ValidationTestViewModel}"
        Title="ValidationTestView" Height="700" Width="900">

    <Window.Resources>
        <!-- Конвервер строки в double значение -->
        <converters:DoubleToStringConverter x:Key="DoubleConverter" />

        <!-- Стиль DoubleRangeValidationRule - проверка исходных данных -->
        <Style x:Key="WaterCutValidation" TargetType="TextBox">
            <Setter Property="Text">
                <Setter.Value>
                    <Binding Path="WaterCut">
                        <Binding.UpdateSourceTrigger>
                            PropertyChanged
                        </Binding.UpdateSourceTrigger>
                        <Binding.Converter>
                            <converters:DoubleToStringConverter />
                        </Binding.Converter>
                        <Binding.ValidationRules>
                            <validationRules:DoubleRangeValidationRule Min="0" Max="100" />
                        </Binding.ValidationRules>
                    </Binding>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Показ всплывающей подсказки на контролом, если есть ошибки (не использую, достаточно шаблона ниже -->
        <Style x:Key="WaterCutValidationAndError" TargetType="{x:Type TextBox}"
               BasedOn="{StaticResource WaterCutValidation}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                            Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Шаблон раскраски контрола при появлении ошибки -->
        <ControlTemplate x:Key="ValidationTemplate">
            <DockPanel LastChildFill="True">
                <Border Background="Red" DockPanel.Dock="Right" Margin="5,0,0,0" Width="20" Height="20"
                        CornerRadius="10"
                        ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                    <TextBlock Text="!" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold"
                               Foreground="White" />
                </Border>
                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center">
                    <Border BorderBrush="Red" BorderThickness="1" />
                </AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>

        <FrameworkElement x:Key="DataContextBridge" />
    </Window.Resources>

    <Window.DataContext>
        <Binding Mode="OneWayToSource"
                 Path="DataContext"
                 Source="{StaticResource DataContextBridge}" />
    </Window.DataContext>

    <StackPanel>

        <StackPanel HorizontalAlignment="Left">

            <TextBox Name="WaterCutTextBox"
                     Style="{StaticResource WaterCutValidation}"
                     Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                     Height="30" Width="100" TextAlignment="Right"
                     Margin="0,10,0,0" FontSize="16" />

            <Button Height="30" Width="100" Margin="0,10" Content="Press me!"
                    Click="Button_Click" />

            <TextBox Width="100" Margin="5" TextAlignment="Right">
                <TextBox.Text>
                    <Binding Path="MyDoubleValue" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validationRules:MyStringLengthValidationRule>
                                <validationRules:MyStringLengthValidationRule.LengthContainer>
                                    <classes:IntegerContainer
                                        DataContext="{Binding Source={StaticResource DataContextBridge}, Path=DataContext}"
                                        Value="{Binding MyLength}" />
                                </validationRules:MyStringLengthValidationRule.LengthContainer>
                            </validationRules:MyStringLengthValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </StackPanel>

        <DataGrid Width="700" Height="300" Margin="5"
                  AutoGenerateColumns="False"
                  ItemsSource="{Binding MyList}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Обычный столбец" Width="100"
                                    Binding="{Binding DoubleValue}" />

                <DataGridTemplateColumn Header="Внутри TextBox" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding DoubleValue, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Внутри RadWatermarkTextBox" Width="160">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <telerik:RadWatermarkTextBox Text="{Binding DoubleValue, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Внутри DatePicker" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding DateValue, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Внутри RadDatePicker" Width="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <telerik:RadDatePicker SelectedDate="{Binding DateValue, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </StackPanel>
</Window>