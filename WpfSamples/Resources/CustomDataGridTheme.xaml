<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dg="clr-namespace:WpfSamples.Controls.Common.DataGridCustomization"
                    xmlns:columnsVisibilityControl="clr-namespace:WpfSamples.Controls.Common.DataGridCustomization.ColumnsVisibility"
                    xmlns:filter="clr-namespace:WpfSamples.Controls.Common.DataGridCustomization.Filter">

    <Style
        x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
        TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                   SnapsToDevicePixels="True" />
                        <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3"
                                 Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform"
                                 VerticalAlignment="Bottom" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Border"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Border"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type dg:CustomDataGrid}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalGridLinesBrush" Value="LightGray" />
        <Setter Property="VerticalGridLinesBrush" Value="LightGray" />
        <Setter Property="RowHeaderWidth" Value="25" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="#FF688CAF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" 
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Row="0" Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column},
                                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        
                                        <Grid Grid.Row="0" Grid.Column="2">
                                            <ToggleButton x:Name="ColumnVisibilityToggle"
                                                          IsChecked="{Binding ElementName=ColumnVisibilityPopup, Path=IsOpen}"
                                                          HorizontalAlignment="Right" Height="25" Width="25">
                                                <ToggleButton.Style>
                                                    <Style TargetType="ToggleButton">
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="ToggleButton">
                                                                    <Border BorderBrush="{DynamicResource BaseColor}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}">
                                                                        <Image
                                                                            Source="/IPA;component/Resources/Images/filter.png"
                                                                            Height="10" Width="10" Margin="2" />
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding Path=(columnsVisibilityControl:ColumnsVisibilityControl.IsEnableColumnsVisibility), Mode=OneWay,
                                                                          RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                                Value="True">
                                                                <DataTrigger.Setters>
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger.Setters>
                                                            </DataTrigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Trigger.Setters>
                                                                    <Setter Property="BorderThickness" Value="1" />
                                                                </Trigger.Setters>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>

                                            <columnsVisibilityControl:ColumnsVisibilityControl
                                                x:Name="ColumnVisibilityPopup"
                                                Placement="Bottom"
                                                StaysOpen="False" Width="200" />
                                        </Grid>

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="1" />

                                        <dg:DataGridFootersPresenter x:Name="PART_FooterView" Grid.Column="1"
                                                                     Grid.Row="2"
                                                                     HorizontalOffset="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                                     TargetDataGrid="{Binding  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Rectangle Focusable="false" Fill="White" Grid.Column="0" Grid.Row="2" />

                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical" Grid.Row="1"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                                        <Grid Grid.Column="1" Grid.Row="3">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition
                                                    Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Validation Error Template for a DataGrid Row -->
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="/IPA;component/Resources/Images/error2-16.png"
                           Margin="0" Width="16" Height="16"
                           ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},
                                     Path=(Validation.Errors)[0].ErrorContent}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#14000000" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="DimGray" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="SeparatorBrush" Value="#FFC9CACA" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="4 0 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid Background='Transparent'>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Rectangle Grid.Column="0" Grid.ColumnSpan="4" x:Name="BackgroundRectangle" Fill="White"
                                   Stretch="Fill" Stroke="LightGray"
                                   StrokeThickness="1" />

                        <Rectangle Grid.Column="0" Grid.ColumnSpan="4" x:Name="Hover" Stretch="Fill" Opacity="0"
                                   Stroke="LightGray" StrokeThickness="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#29CBC9C9" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <ContentPresenter Grid.Column="1" x:Name="ContentPresenter"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          Cursor="{TemplateBinding Cursor}" />

                        <Path Grid.Column="0" Grid.ColumnSpan="4" x:Name="SortArrow" HorizontalAlignment="Center"
                              VerticalAlignment="Top" Margin="5,3"
                              Width="8" Opacity="0" RenderTransformOrigin=".5,.5" Fill="DimGray"
                              Stretch="Uniform" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX=".9" ScaleY=".9" x:Name="SortIconTransform" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>

                        <ToggleButton Grid.Column="2" x:Name="FilterToggle"
                                      IsChecked="{Binding ElementName=FilterPlacePopup, Path=IsOpen}"
                                      HorizontalAlignment="Right" Height="25" Width="25">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Path=Column.(filter:ColumnItemsFilterControl.IsFilterEnable), Mode=OneWay,
                                            RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}}"
                                            Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding Path=Column.(filter:ColumnItemsFilterControl.IsFiltered), Mode=OneWay,
                                            RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}}"
                                            Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border BorderBrush="{DynamicResource BaseColor}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                                <Image
                                                                    Source="/IPA;component/Resources/Images/filter.png"
                                                                    Height="10" Width="10" Margin="2" />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding Path=Column.(filter:ColumnItemsFilterControl.IsFiltered), Mode=OneWay,
                                            RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}}"
                                            Value="False">
                                            <DataTrigger.Setters>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border BorderBrush="{DynamicResource BaseColor}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                                <Image
                                                                    Source="/IPA;component/Resources/Images/filter_off.png"
                                                                    Height="10" Width="10" Margin="2" />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger.Setters>
                                        </DataTrigger>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.Setters>
                                                <Setter Property="BorderThickness" Value="1" />
                                            </Trigger.Setters>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <filter:ColumnItemsFilterControl x:Name="FilterPlacePopup"
                                                         Grid.Column="0" Grid.ColumnSpan="4" Placement="Bottom"
                                                         PlacementTarget="{Binding ElementName=ContentPresenter}"
                                                         StaysOpen="True" Width="200" />

                        <Thumb Grid.Column="0" x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb Grid.Column="3" x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Opacity" Value="1" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="1" />
                        </Trigger>

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Opacity" Value="1" />
                            <Setter TargetName="BackgroundRectangle" Property="Opacity" Value="1" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" Foreground="DimGray" FontWeight="Bold"
                               TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridCell}" x:Key="DefaultCellStyle">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#36A9A9A9" />
                <Setter Property="Background" Value="#36A9A9A9" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Foreground" Value="DimGray" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="#36616161" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль по умолчанию для DataGridCell -->
    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DefaultCellStyle}"/>

    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DefaultCellStyle}" 
           x:Key="CenterAlignedCellStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DefaultCellStyle}" 
           x:Key="RightAlignedCellStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Right" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>